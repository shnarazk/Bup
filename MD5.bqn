⟨Md5⟩ ⇐

modulo ← 2⋆8
SwapByteOrder ← ⌽·⥊·<˘∘‿8⊸⥊

Encode32 ← {∾⌽((⟨8‿'i',1⟩•bit._cast)∘⋈∘{127<𝕩 ? 𝕩-modulo ; 𝕩})¨{𝕩+16×𝕨}´˘∘‿2⥊"0123456789ABCDEF"⊐𝕩}
ToString ← {⥊((⊑⟜"0123456789abcdef"¨·16⊸(⌊∘(÷˜)⋈|)·{𝕨+2×𝕩}´>)˘SwapByteOrder)𝕩}
t ← Encode32¨⟨
  "D76AA478","E8C7B756","242070DB","C1BDCEEE", "F57C0FAF","4787C62A","A8304613","FD469501",
  "698098D8","8B44F7AF","FFFF5BB1","895CD7BE", "6B901122","FD987193","A679438E","49B40821",
  "F61E2562","C040B340","265E5A51","E9B6C7AA", "D62F105D","02441453","D8A1E681","E7D3FBC8",
  "21E1CDE6","C33707D6","F4D50D87","455A14ED", "A9E3E905","FCEFA3F8","676F02D9","8D2A4C8A",
  "FFFA3942","8771F681","6D9D6122","FDE5380C", "A4BEEA44","4BDECFA9","F6BB4B60","BEBFBC70",
  "289B7EC6","EAA127FA","D4EF3085","04881D05", "D9D4D039","E6DB99E5","1FA27CF8","C4AC5665",
  "F4292244","432AFF97","AB9423A7","FC93A039", "655B59C3","8F0CCC92","FFEFF47D","85845DD1",
  "6FA87E4F","FE2CE6E0","A3014314","4E0811A1", "F7537E82","BD3AF235","2AD7D2BB","EB86D391",
⟩
abcd ← Encode32¨⟨"67452301","EFCDAB89","98BADCFE","10325476"⟩
Add32 ← 32‿1•bit._add

ToMd5 ← {
  # !∧´(255⊸≥-⟜@)¨message ← 𝕩
  msg ← {𝕩∾8↑0}•_while_(448≠512|≠)∾⟜⟨0,0,0,0,0,0,0,1⟩∾{⟨8‿'u',1‿'u'⟩•bit._cast ⋈𝕩-@}¨𝕩
  msg ↩ msg{
    𝕩∾⟨8,1‿'u'⟩•bit._cast⋈{127<𝕩 ? 𝕩-modulo ; 𝕩}𝕨
  }´2⊑{c‿v‿l : ⟨-¬c,v⌊∘÷modulo,l∾˜modulo|v⟩}•_while_(0<⊑)8‿(8×≠𝕩)‿⟨⟩
  # (≠msg)!0≡512|≠msg
  ⌽⌾(⥊∘(<˘)∘‿8⊸⥊)¨abcd{
    block ← ⥊<˘∘‿32⥊𝕨
    _trans ← {b‿c‿d 𝔽 _𝕣 a :
      coeffs ← ⟨
         0‿ 7, 1‿12, 2‿17, 3‿22, 4‿ 7, 5‿12, 6‿17, 7‿22, 8‿ 7, 9‿12,10‿17,11‿22,12‿ 7,13‿12,14‿17,15‿22,
         1‿ 5, 6‿ 9,11‿14, 0‿20, 5‿ 5,10‿ 9,15‿14, 4‿20, 9‿ 5,14‿ 9, 3‿14, 8‿20,13‿ 5, 2‿ 9, 7‿14,12‿20,
         5‿ 4, 8‿11,11‿16,14‿23, 1‿ 4, 4‿11, 7‿16,10‿23,13‿ 4, 0‿11, 3‿16, 6‿23, 9‿ 4,12‿11,15‿16, 2‿23,
         0‿ 6, 7‿10,14‿15, 5‿21,12‿ 6, 3‿10,10‿15, 1‿21, 8‿ 6,15‿10, 6‿15,13‿21, 4‿ 6,11‿10, 2‿15, 9‿21,
      ⟩
      F ← {x‿y‿z : z 32‿1 •bit._xor x 32‿1 •bit._and y 32‿1 •bit._xor z}
      G ← {x‿y‿z : y 32‿1 •bit._xor z 32‿1 •bit._and x 32‿1 •bit._xor y}
      H ← {x‿y‿z : x 32‿1 •bit._xor y 32‿1 •bit._xor z}
      J ← {x‿y‿z : y 32‿1 •bit._xor x 32‿1 •bit._or 32‿1 •bit._not z}
      k‿s ← 𝕗⊑coeffs
      Fn ← (𝕗⌊∘÷16)◶⟨F,G,H,J⟩
      b Add32 s⊸⌽⁼a Add32(Fn b‿c‿d)Add32(k⊑block)Add32 𝕗⊑t
    }
    𝕩 Add32¨1⊑{⟨n,a‿b‿c‿d⟩ : a b‿c‿d⊸(n _trans) ↩ ⋄ ⟨1+n,d‿a‿b‿c⟩}•_while_(64>⊑)0‿𝕩
  }´⌽<˘∘‿512⥊msg
}

Md5 ← ∾ToString¨∘ToMd5
